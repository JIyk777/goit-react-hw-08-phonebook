{"version":3,"file":"static/js/199.ea8d92b5.chunk.js","mappings":"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","sources":["components/phonebook/add_new_contact/ContactFormStyle.jsx","redux/contacts/contactsSelector.js","components/phonebook/add_new_contact/ContactForm.jsx","components/phonebook/create_all_contacts_list/ContactsListStyle.jsx","components/phonebook/create_all_contacts_list/ContactsList.jsx","components/phonebook/filter/FilterStyle.jsx","components/phonebook/filter/Filter.jsx","components/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormAddBtn = styled.button`\n  padding: 10px;\n  border-radius: 30px;\n  margin-top: 16px;\n  border: 0;\n  background-color: #ffd700;\n  cursor: pointer;\n  &:hover,\n  &focus {\n    background-color: #ffff00;\n  }\n`;\nexport const FormInput = styled.input`\n  border-radius: 20px;\n  padding: 5px 20px;\n`;\nexport const FormLabelText = styled.span`\n  margin-bottom: 10px;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n`;\n","export const getContactsValue = state => state.myContacts.contacts.items;\nexport const getFilterValue = state => state.myContacts.filter;\n","import React from 'react';\n\nimport { Box } from 'components/box/Box';\nimport { FormAddBtn, FormInput, FormLabelText } from './ContactFormStyle';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContactsValue } from 'redux/contacts/contactsSelector';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContactsValue);\n  const dispatch = useDispatch();\n\n  const createNewContact = (Name, Number) => {\n    const allName = contacts.map(contact => contact.name);\n\n    allName.includes(Name)\n      ? alert(`${Name} is already in contacts.`)\n      : dispatch(\n          addContact({\n            name: Name,\n\n            number: Number,\n          })\n        );\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    createNewContact(form.elements.name.value, form.elements.number.value);\n    form.reset();\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      width=\"300px\"\n      ml=\"auto\"\n      mr=\"auto\"\n      onSubmit={handleSubmit}\n    >\n      <Box as=\"label\" display=\"flex\" flexDirection=\"column\" p=\"5px 0\">\n        <FormLabelText>Name</FormLabelText>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Please enter name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Box>\n      <Box as=\"label\" display=\"flex\" flexDirection=\"column\" p=\"5px 0\">\n        <FormLabelText>Phone</FormLabelText>\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Please enter phone\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Box>\n      <FormAddBtn type=\"submit\">Add Contact</FormAddBtn>\n    </Box>\n  );\n};\n\n// ContactForm.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onAddNewContact: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const ContactDelBtn = styled.button`\n  padding: 10px;\n  border-radius: 50%;\n  border: 0;\n  background-color: #ffd700;\n  cursor: pointer;\n  &:hover,\n  &focus {\n    background-color: #ffff00;\n  }\n`;\n","import React from 'react';\nimport { Box } from 'components/box/Box';\nimport { ContactDelBtn } from './ContactsListStyle';\nimport { removeContactByID } from 'redux/contacts/contactsOperations';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getContactsValue,\n  getFilterValue,\n} from 'redux/contacts/contactsSelector';\n\nexport const ContactsList = () => {\n  const filter = useSelector(getFilterValue);\n  const contacts = useSelector(getContactsValue);\n  const dispatch = useDispatch();\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  return (\n    visibleContacts.length !== 0 && (\n      <Box\n        as=\"ul\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        width=\"300px\"\n        ml=\"auto\"\n        mr=\"auto\"\n        p={0}\n      >\n        {visibleContacts.map(contact => (\n          <Box\n            as=\"li\"\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            p=\"5px 10px\"\n            key={contact.id}\n          >\n            <span>{contact.name}</span>\n            <span>{contact.number}</span>\n            <ContactDelBtn\n              type=\"button\"\n              onClick={() => dispatch(removeContactByID(contact.id))}\n            >\n              Del\n            </ContactDelBtn>\n          </Box>\n        ))}\n      </Box>\n    )\n  );\n};\n\n// ContactsList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  border-radius: 20px;\n  padding: 5px 20px;\n`;\n","import React from 'react';\n\nimport { FilterInput } from './FilterStyle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from 'redux/contacts/contactsSelector';\nimport { changeFilter } from 'redux/contacts/contactsSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <label>\n      <FilterInput\n        type=\"text\"\n        value={filterValue}\n        onChange={onChangeFilter}\n        placeholder=\"Please enter name\"\n      ></FilterInput>\n    </label>\n  );\n};\n","import { ContactForm } from './phonebook/add_new_contact/ContactForm';\nimport { ContactsList } from './phonebook/create_all_contacts_list/ContactsList';\nimport { Filter } from './phonebook/filter/Filter';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm></ContactForm>\n      <h2>Contacts</h2>\n      <Filter></Filter>\n      <ContactsList></ContactsList>\n    </>\n  );\n};\nexport default Phonebook;\n"],"names":["FormAddBtn","styled","FormInput","FormLabelText","getContactsValue","state","myContacts","contacts","items","getFilterValue","filter","ContactForm","useSelector","dispatch","useDispatch","Box","as","display","flexDirection","width","ml","mr","onSubmit","evt","preventDefault","Name","Number","form","currentTarget","elements","name","value","number","map","contact","includes","alert","addContact","reset","p","type","pattern","placeholder","title","required","ContactDelBtn","ContactsList","normalizedFilter","toLowerCase","visibleContacts","length","justifyContent","alignItems","onClick","removeContactByID","id","FilterInput","Filter","filterValue","onChange","e","changeFilter","useEffect","fetchContacts"],"sourceRoot":""}